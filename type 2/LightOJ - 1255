
#include<bits/stdc++.h>
using namespace std;

void computeLPSArray(string  pat, int M, int* lps);


int KMPSearch(string pat, string txt)
{
    int l=0;
    int M = pat.size();
    int N = txt.size();


    int lps[M];

    computeLPSArray(pat, M, lps);

    int i = 0;
    int j = 0;
    while (i < N) {
        if (pat[j] == txt[i]) {
            j++;
            i++;
        }

        if (j == M) {
           l++;
            j = lps[j - 1];
        }

        // mismatch after j matches
        else if (i < N && pat[j] != txt[i]) {
            // Do not match lps[0..lps[j-1]] characters,
            // they will match anyway
            if (j != 0)
                j = lps[j - 1];
            else
                i = i + 1;
        }
    }
    return l;
}


void computeLPSArray(string pat, int M, int* lps)
{

    int len = 0;

    lps[0] = 0;

    int i = 1;
    while (i < M) {
        if (pat[i] == pat[len]) {
            len++;
            lps[i] = len;
            i++;
        }
        else
        {

            if (len != 0) {
                len = lps[len - 1];

            }
            else
            {
                lps[i] = 0;
                i++;
            }
        }
    }
}


int main()
{
    int sura,d;
    cin>>sura;
    getchar();
    for(d=0;d<sura;d++){
            string txt,pat;
        getline(cin,txt);
    getline(cin,pat);
    int p;
    p=KMPSearch(pat, txt);
    cout<<"Case "<<d+1<<": "<<p<<endl;}

}
